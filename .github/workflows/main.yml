name: Generate Docs on merge to Main

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
    paths:
      - transform/*
      - transform/**/*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Deployment Script
    runs-on: ubuntu-latest
    # default container: datacoves/ci-basic-dbt-snowflake:1.6.202305082038-fa4492f2
    container: datacoves/pi2-ci-basic-base:1.6.202305082038-20230521132745
    defaults:
      run:
        working-directory: /__w/balboa/balboa/transform

    env:
      DBT_PROFILES_DIR: /__w/balboa/balboa/automate/dbt
      DATACOVES__DBT_HOME: /__w/balboa/balboa/transform

      DATACOVES__MAIN__ACCOUNT: ${{ secrets.DATACOVES__MAIN__ACCOUNT }}
      DATACOVES__MAIN__ROLE: ${{ secrets.DATACOVES__MAIN__ROLE }}
      DATACOVES__MAIN__WAREHOUSE: ${{ secrets.DATACOVES__MAIN__WAREHOUSE }}
      DATACOVES__MAIN__DATABASE: BALBOA
      DATACOVES__STAGING__DATABASE: BALBOA_STAGING
      DATACOVES__MAIN__USER: ${{ secrets.DATACOVES__MAIN__USER }}
      DATACOVES__MAIN__PASSWORD: ${{ secrets.DATACOVES__MAIN__PASSWORD }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.push.head.sha }}
          fetch-depth: 0

      - name: Set Secure Directory
        run: git config --global --add safe.directory /__w/balboa/balboa

      - name: Install dbt packages
        run: "dbt deps"

      - name: Get prod manifest
        id: prod-manifest
        run: "../automate/dbt/get_artifacts.sh"

      - name: Run blue / green deployment
        id: run-blue-green
        env:
          MANIFEST_FOUND: ${{ steps.prod-manifest.outputs.manifest_found }}
        run: "../automate/blue_green_run.py --ci_cd_run"

      - name: Delete merged test databases
        run: "../automate/dbt/remove_test_databases.sh"

      - name: Generate dbt documentation
        run: "dbt docs generate"

      - name: Optimize dbt documentation
        run: "../automate/dbt/dbt_docs_optimizer.py"

      - name: Deploy docs ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: dbt-docs
          folder: transform/target

      - name: Drop staging db on Failure
        if: always() && (steps.run-blue-green.outcome == 'failure')
        run: "dbt --no-write-json run-operation drop_staging_db --args 'db_name: ${{env.DATACOVES__STAGING__DATABASE}}'"  # yamllint disable-line rule:line-length
