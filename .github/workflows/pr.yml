name: Test and Check on Pull Request

on:  # yamllint disable-line rule:truthy
  pull_request:
    paths:
      - transform/*
      - transform/**/*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Pull Request Integration Tests
    runs-on: ubuntu-latest
    container: datacoves/ci-airflow:1.4.202304112229-d4d58727
    # defaults:
    #  run:
    #    working-directory: /github/workspace/transform

    env:
      DBT_PROFILES_DIR: /github/workspace/automate/dbt
      DBT_HOME: /github/workspace/transform

      DATACOVES__MAIN__ACCOUNT: ${{ secrets.DATACOVES__MAIN__ACCOUNT }}
      DATACOVES__MAIN__ROLE: ${{ secrets.DATACOVES__MAIN__ROLE }}
      DATACOVES__MAIN__WAREHOUSE: ${{ secrets.DATACOVES__MAIN__WAREHOUSE }}
      DATACOVES__MAIN__DATABASE: BALBOA_PR_${{ github.event.number }}
      DATACOVES__MAIN__USER: ${{ secrets.DATACOVES__MAIN__USER }}
      DATACOVES__MAIN__PASSWORD: ${{ secrets.DATACOVES__MAIN__PASSWORD }}

      DATACOVES__REPO_PATH: /github/workspace
      DATACOVES__YAML_DAGS_FOLDER: /github/workspace/schedule

      AIRBYTE__EXTRACT_LOCATION: /github/workspace/load
      AIRFLOW__CORE__DAGS_FOLDER: /github/workspace/automate/airflow/dags
      AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT: 300

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: List of files changed
        run: "git diff origin/${{ github.event.pull_request.base.ref }} HEAD --name-status"
      
      - run: pwd

      - name: Install dbt packages
        run: "dbt deps"

      - name: Create PR database
        run: "dbt --no-write-json run-operation create_database"

      - name: Get prod manifest
        id: prod-manifest
        run: "../automate/dbt/get_artifacts.sh"

      - name: Run dbt build slim mode
        if: ${{ steps.prod-manifest.outputs.manifest_found == 'true' }}
        run: "dbt build --fail-fast --defer --state logs --select state:modified+"

      - name: Run dbt build full run
        if: ${{ steps.prod-manifest.outputs.manifest_found == 'false' }}
        run: "dbt build --fail-fast"

      - name: Grant access to PR database
        run: "dbt --no-write-json run-operation grant_access_to_pr_database"

      - name: Run governance checks
        run: "pre-commit run --from-ref origin/${{ github.event.pull_request.base.ref }} --to-ref HEAD"

      - name: Test DAG structure integrity (DagBag Loading)
        run: "python /usr/app/load_dagbag.py"

      - name: Test DBT Sources against DAGs' YAML files
        run: "python /usr/app/test_dags.py"
