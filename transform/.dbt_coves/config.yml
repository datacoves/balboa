generate:
  sources:
    database: RAW # Database where to look for source tables
    # schemas: # List of schema names where to look for source tables
    #   - RAW
    sources_destination: "models/L1_inlets/{{schema}}/{{schema}}.yml" # Where sources yml files will be generated
    models_destination: "models/L1_inlets/{{schema}}/{{relation}}.sql" # Where models sql files will be generated
    model_props_destination: "models/L1_inlets/{{schema}}/{{relation}}.yml" # Where models yml files will be generated
    update_strategy: ask # Action to perform when a property file exists. Options: update, recreate, fail, ask
    templates_folder: ".dbt_coves/templates" # Folder where source generation jinja templates are located. source_props.yml, source_model_props.yml, and source_model.sql

  properties:
    destination: "{{model_folder_path}}/{{model_file_name}}.yml" # Where models yml files will be generated
    # You can specify a different path by declaring it explicitly, i.e.: "models/staging/{{model_file_name}}.yml"
    update-strategy: ask # Action to perform when a property file already exists. Options: update, recreate, fail, ask
    models: "models/" # Model(s) path where 'generate properties' will look for models for generation

  metadata:
    database: RAW
    # schemas: # List of schema names where to look for source tables
    #   - RAW
    # destination: "metadata.csv"

extract:
  airbyte:
    path: /config/workspace/load/airbyte # Where json files will be generated
    host: http://airbyte-server # Airbyte's API hostname
    port: 8001 # Airbyte's API port
  fivetran:
    path: /config/workspace/load/fivetran
    #api_key: # Get it from Fivetran profile settings
    #api_secret: # Get it from Fivetran profile settings
    credentials: fivetran_credentials.yml # See dbt-coves README on how to write this file

load:
  airbyte:
    path: /config/workspace/load/airbyte
    host: http://localhost
    port: 8001
    #secrets_path: /config/workspace/secrets # Secret files location for Airbyte configuration
    secrets_manager: datacoves # Secret credentials provider (secrets_path OR secrets_manager should be used, can't load secrets locally and remotely at the same time)
    secrets_url: https://api.datacoves.localhost # Secret credentials provider url
    secrets_project: analytics-local
    secrets_tags:
      - airbyte
    secrets_key: # Datacoves Secret slug (optional): must match Airbyte object ID, i.e: 'snowflake'
    secrets_token: # Get your Token on AUTH TOKEN -> TOKENS from Django Panel
  fivetran:
    path: /config/workspace/load/fivetran
    #api_key: # Get it from Fivetran profile settings
    #api_secret: # Get it from Fivetran profile settings
    credentials: fivetran_credentials.yml # See dbt-coves README on how to write this file
    #secrets_path: /config/workspace/secrets # Secret files location for Fivetran configuration
    secrets_manager: datacoves # Secret credentials provider (secrets_path OR secrets_manager should be used, can't load secrets locally and remotely at the same time)
    secrets_url: https://api.datacoves.localhost # Secret credentials provider url
    secrets_project: analytics-local
    secrets_tags:
      - fivetran
    secrets_key: # Datacoves Secret slug (optional): must match Fivetran two_word autogenerated ID, i.e: 'lazy_cat'
    secrets_token: # Get your Token on AUTH TOKEN -> TOKENS from Django Panel
